// Code generated by protoc-gen-go. DO NOT EDIT.
// source: foobar.proto

package foobar_grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Foobar struct {
	ID                   uint64               `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	FoobarContent        string               `protobuf:"bytes,2,opt,name=FoobarContent,proto3" json:"FoobarContent,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Foobar) Reset()         { *m = Foobar{} }
func (m *Foobar) String() string { return proto.CompactTextString(m) }
func (*Foobar) ProtoMessage()    {}
func (*Foobar) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fe8bbf5351ca4f2, []int{0}
}

func (m *Foobar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Foobar.Unmarshal(m, b)
}
func (m *Foobar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Foobar.Marshal(b, m, deterministic)
}
func (m *Foobar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Foobar.Merge(m, src)
}
func (m *Foobar) XXX_Size() int {
	return xxx_messageInfo_Foobar.Size(m)
}
func (m *Foobar) XXX_DiscardUnknown() {
	xxx_messageInfo_Foobar.DiscardUnknown(m)
}

var xxx_messageInfo_Foobar proto.InternalMessageInfo

func (m *Foobar) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Foobar) GetFoobarContent() string {
	if m != nil {
		return m.FoobarContent
	}
	return ""
}

func (m *Foobar) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Foobar) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type ListFoobar struct {
	Foobars              []*Foobar `protobuf:"bytes,1,rep,name=Foobars,proto3" json:"Foobars,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListFoobar) Reset()         { *m = ListFoobar{} }
func (m *ListFoobar) String() string { return proto.CompactTextString(m) }
func (*ListFoobar) ProtoMessage()    {}
func (*ListFoobar) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fe8bbf5351ca4f2, []int{1}
}

func (m *ListFoobar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFoobar.Unmarshal(m, b)
}
func (m *ListFoobar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFoobar.Marshal(b, m, deterministic)
}
func (m *ListFoobar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFoobar.Merge(m, src)
}
func (m *ListFoobar) XXX_Size() int {
	return xxx_messageInfo_ListFoobar.Size(m)
}
func (m *ListFoobar) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFoobar.DiscardUnknown(m)
}

var xxx_messageInfo_ListFoobar proto.InternalMessageInfo

func (m *ListFoobar) GetFoobars() []*Foobar {
	if m != nil {
		return m.Foobars
	}
	return nil
}

type DeleteResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Code                 uint64   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteResponse) Reset()         { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()    {}
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fe8bbf5351ca4f2, []int{2}
}

func (m *DeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponse.Unmarshal(m, b)
}
func (m *DeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponse.Marshal(b, m, deterministic)
}
func (m *DeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponse.Merge(m, src)
}
func (m *DeleteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteResponse.Size(m)
}
func (m *DeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponse proto.InternalMessageInfo

func (m *DeleteResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *DeleteResponse) GetCode() uint64 {
	if m != nil {
		return m.Code
	}
	return 0
}

type FetchRequest struct {
	Num                  uint64   `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchRequest) Reset()         { *m = FetchRequest{} }
func (m *FetchRequest) String() string { return proto.CompactTextString(m) }
func (*FetchRequest) ProtoMessage()    {}
func (*FetchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fe8bbf5351ca4f2, []int{3}
}

func (m *FetchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchRequest.Unmarshal(m, b)
}
func (m *FetchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchRequest.Marshal(b, m, deterministic)
}
func (m *FetchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchRequest.Merge(m, src)
}
func (m *FetchRequest) XXX_Size() int {
	return xxx_messageInfo_FetchRequest.Size(m)
}
func (m *FetchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchRequest proto.InternalMessageInfo

func (m *FetchRequest) GetNum() uint64 {
	if m != nil {
		return m.Num
	}
	return 0
}

type SingleRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SingleRequest) Reset()         { *m = SingleRequest{} }
func (m *SingleRequest) String() string { return proto.CompactTextString(m) }
func (*SingleRequest) ProtoMessage()    {}
func (*SingleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fe8bbf5351ca4f2, []int{4}
}

func (m *SingleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SingleRequest.Unmarshal(m, b)
}
func (m *SingleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SingleRequest.Marshal(b, m, deterministic)
}
func (m *SingleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SingleRequest.Merge(m, src)
}
func (m *SingleRequest) XXX_Size() int {
	return xxx_messageInfo_SingleRequest.Size(m)
}
func (m *SingleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SingleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SingleRequest proto.InternalMessageInfo

func (m *SingleRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ErrorMessage struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ErrorMessage) Reset()         { *m = ErrorMessage{} }
func (m *ErrorMessage) String() string { return proto.CompactTextString(m) }
func (*ErrorMessage) ProtoMessage()    {}
func (*ErrorMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fe8bbf5351ca4f2, []int{5}
}

func (m *ErrorMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorMessage.Unmarshal(m, b)
}
func (m *ErrorMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorMessage.Marshal(b, m, deterministic)
}
func (m *ErrorMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorMessage.Merge(m, src)
}
func (m *ErrorMessage) XXX_Size() int {
	return xxx_messageInfo_ErrorMessage.Size(m)
}
func (m *ErrorMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorMessage proto.InternalMessageInfo

func (m *ErrorMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Foobar)(nil), "foobar_grpc.Foobar")
	proto.RegisterType((*ListFoobar)(nil), "foobar_grpc.ListFoobar")
	proto.RegisterType((*DeleteResponse)(nil), "foobar_grpc.DeleteResponse")
	proto.RegisterType((*FetchRequest)(nil), "foobar_grpc.FetchRequest")
	proto.RegisterType((*SingleRequest)(nil), "foobar_grpc.SingleRequest")
	proto.RegisterType((*ErrorMessage)(nil), "foobar_grpc.ErrorMessage")
}

func init() {
	proto.RegisterFile("foobar.proto", fileDescriptor_1fe8bbf5351ca4f2)
}

var fileDescriptor_1fe8bbf5351ca4f2 = []byte{
	// 385 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x41, 0xcf, 0x93, 0x40,
	0x14, 0x0c, 0x14, 0x69, 0x78, 0xa5, 0x8d, 0x59, 0x13, 0x45, 0x3c, 0x94, 0x10, 0x0f, 0x5c, 0xa4,
	0xb1, 0x5e, 0x9a, 0xd8, 0x4b, 0xd3, 0xda, 0xda, 0x44, 0x2f, 0x5b, 0x3d, 0x1b, 0x5a, 0x5e, 0x91,
	0x04, 0x58, 0xdc, 0x5d, 0xfe, 0x98, 0x3f, 0xc1, 0x5f, 0x66, 0xca, 0xb2, 0x0a, 0xa6, 0xf1, 0xfb,
	0x6e, 0xef, 0x31, 0x33, 0x99, 0x9d, 0x79, 0x80, 0x7b, 0x65, 0xec, 0x9c, 0xf0, 0xb8, 0xe6, 0x4c,
	0x32, 0x32, 0x51, 0xdb, 0xb7, 0x8c, 0xd7, 0x17, 0x7f, 0x9e, 0x31, 0x96, 0x15, 0xb8, 0x68, 0xa1,
	0x73, 0x73, 0x5d, 0xc8, 0xbc, 0x44, 0x21, 0x93, 0xb2, 0x56, 0xec, 0xf0, 0xa7, 0x01, 0xf6, 0xbe,
	0x15, 0x90, 0x19, 0x98, 0xc7, 0x9d, 0x67, 0x04, 0x46, 0x64, 0x51, 0xf3, 0xb8, 0x23, 0xaf, 0x61,
	0xaa, 0x90, 0x2d, 0xab, 0x24, 0x56, 0xd2, 0x33, 0x03, 0x23, 0x72, 0xe8, 0xf0, 0x23, 0x59, 0x81,
	0xf3, 0xb5, 0x4e, 0x13, 0x89, 0xe9, 0x46, 0x7a, 0xa3, 0xc0, 0x88, 0x26, 0x4b, 0x3f, 0x56, 0xae,
	0xb1, 0x76, 0x8d, 0xbf, 0x68, 0x57, 0xfa, 0x97, 0x7c, 0x53, 0x6e, 0x39, 0x76, 0x4a, 0xeb, 0x61,
	0xe5, 0x1f, 0x72, 0xf8, 0x1e, 0xe0, 0x53, 0x2e, 0x64, 0xf7, 0xee, 0x37, 0x30, 0x56, 0x93, 0xf0,
	0x8c, 0x60, 0x14, 0x4d, 0x96, 0xcf, 0xe2, 0x5e, 0x05, 0xb1, 0xc2, 0xa8, 0xe6, 0x84, 0x6b, 0x98,
	0xed, 0xb0, 0x40, 0x89, 0x14, 0x45, 0xcd, 0x2a, 0x81, 0xe4, 0x39, 0xd8, 0x42, 0x26, 0xb2, 0x11,
	0x6d, 0x78, 0x87, 0x76, 0x1b, 0x21, 0x60, 0x5d, 0x58, 0x8a, 0x6d, 0x6e, 0x8b, 0xb6, 0x73, 0x18,
	0x80, 0xbb, 0x47, 0x79, 0xf9, 0x4e, 0xf1, 0x47, 0x83, 0x42, 0x92, 0xa7, 0x30, 0xaa, 0x9a, 0xb2,
	0x6b, 0xed, 0x36, 0x86, 0x73, 0x98, 0x9e, 0xf2, 0x2a, 0x2b, 0x50, 0x53, 0x66, 0x60, 0xe6, 0xa9,
	0xee, 0x35, 0x4f, 0xc3, 0x08, 0xdc, 0x0f, 0x9c, 0x33, 0xfe, 0x19, 0x85, 0x48, 0x32, 0x24, 0x1e,
	0x8c, 0x4b, 0x35, 0x76, 0xfe, 0x7a, 0x5d, 0xfe, 0x32, 0xf5, 0x09, 0x3e, 0x26, 0x55, 0x5a, 0x20,
	0x27, 0x6b, 0x70, 0x0e, 0xa8, 0x83, 0xfb, 0x83, 0x9c, 0x03, 0x53, 0xff, 0x5e, 0x07, 0x64, 0x0b,
	0xd3, 0x03, 0xca, 0x5e, 0x75, 0x2f, 0x87, 0xac, 0x5e, 0x30, 0xff, 0xc5, 0x00, 0xea, 0x69, 0x56,
	0xe0, 0xaa, 0x1b, 0x76, 0xfb, 0x3d, 0xa7, 0xfb, 0xf6, 0x1b, 0xb0, 0x55, 0xf3, 0xff, 0x7d, 0xf9,
	0xab, 0x01, 0xf6, 0xcf, 0xa9, 0xde, 0xc2, 0x93, 0x93, 0x64, 0x1c, 0x1f, 0xef, 0x7a, 0xb6, 0xdb,
	0x7f, 0xe9, 0xdd, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xdb, 0xf3, 0x7a, 0x7e, 0x26, 0x03, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FoobarHandlerClient is the client API for FoobarHandler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FoobarHandlerClient interface {
	GetFoobar(ctx context.Context, in *SingleRequest, opts ...grpc.CallOption) (*Foobar, error)
	GetListFoobar(ctx context.Context, in *FetchRequest, opts ...grpc.CallOption) (*ListFoobar, error)
	UpdateFoobar(ctx context.Context, in *Foobar, opts ...grpc.CallOption) (*Foobar, error)
	Delete(ctx context.Context, in *SingleRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	Store(ctx context.Context, in *Foobar, opts ...grpc.CallOption) (*Foobar, error)
}

type foobarHandlerClient struct {
	cc grpc.ClientConnInterface
}

func NewFoobarHandlerClient(cc grpc.ClientConnInterface) FoobarHandlerClient {
	return &foobarHandlerClient{cc}
}

func (c *foobarHandlerClient) GetFoobar(ctx context.Context, in *SingleRequest, opts ...grpc.CallOption) (*Foobar, error) {
	out := new(Foobar)
	err := c.cc.Invoke(ctx, "/foobar_grpc.FoobarHandler/GetFoobar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *foobarHandlerClient) GetListFoobar(ctx context.Context, in *FetchRequest, opts ...grpc.CallOption) (*ListFoobar, error) {
	out := new(ListFoobar)
	err := c.cc.Invoke(ctx, "/foobar_grpc.FoobarHandler/GetListFoobar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *foobarHandlerClient) UpdateFoobar(ctx context.Context, in *Foobar, opts ...grpc.CallOption) (*Foobar, error) {
	out := new(Foobar)
	err := c.cc.Invoke(ctx, "/foobar_grpc.FoobarHandler/UpdateFoobar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *foobarHandlerClient) Delete(ctx context.Context, in *SingleRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/foobar_grpc.FoobarHandler/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *foobarHandlerClient) Store(ctx context.Context, in *Foobar, opts ...grpc.CallOption) (*Foobar, error) {
	out := new(Foobar)
	err := c.cc.Invoke(ctx, "/foobar_grpc.FoobarHandler/Store", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FoobarHandlerServer is the server API for FoobarHandler service.
type FoobarHandlerServer interface {
	GetFoobar(context.Context, *SingleRequest) (*Foobar, error)
	GetListFoobar(context.Context, *FetchRequest) (*ListFoobar, error)
	UpdateFoobar(context.Context, *Foobar) (*Foobar, error)
	Delete(context.Context, *SingleRequest) (*DeleteResponse, error)
	Store(context.Context, *Foobar) (*Foobar, error)
}

// UnimplementedFoobarHandlerServer can be embedded to have forward compatible implementations.
type UnimplementedFoobarHandlerServer struct {
}

func (*UnimplementedFoobarHandlerServer) GetFoobar(ctx context.Context, req *SingleRequest) (*Foobar, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFoobar not implemented")
}
func (*UnimplementedFoobarHandlerServer) GetListFoobar(ctx context.Context, req *FetchRequest) (*ListFoobar, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetListFoobar not implemented")
}
func (*UnimplementedFoobarHandlerServer) UpdateFoobar(ctx context.Context, req *Foobar) (*Foobar, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFoobar not implemented")
}
func (*UnimplementedFoobarHandlerServer) Delete(ctx context.Context, req *SingleRequest) (*DeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedFoobarHandlerServer) Store(ctx context.Context, req *Foobar) (*Foobar, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Store not implemented")
}

func RegisterFoobarHandlerServer(s *grpc.Server, srv FoobarHandlerServer) {
	s.RegisterService(&_FoobarHandler_serviceDesc, srv)
}

func _FoobarHandler_GetFoobar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SingleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FoobarHandlerServer).GetFoobar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/foobar_grpc.FoobarHandler/GetFoobar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FoobarHandlerServer).GetFoobar(ctx, req.(*SingleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FoobarHandler_GetListFoobar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FoobarHandlerServer).GetListFoobar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/foobar_grpc.FoobarHandler/GetListFoobar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FoobarHandlerServer).GetListFoobar(ctx, req.(*FetchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FoobarHandler_UpdateFoobar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Foobar)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FoobarHandlerServer).UpdateFoobar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/foobar_grpc.FoobarHandler/UpdateFoobar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FoobarHandlerServer).UpdateFoobar(ctx, req.(*Foobar))
	}
	return interceptor(ctx, in, info, handler)
}

func _FoobarHandler_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SingleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FoobarHandlerServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/foobar_grpc.FoobarHandler/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FoobarHandlerServer).Delete(ctx, req.(*SingleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FoobarHandler_Store_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Foobar)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FoobarHandlerServer).Store(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/foobar_grpc.FoobarHandler/Store",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FoobarHandlerServer).Store(ctx, req.(*Foobar))
	}
	return interceptor(ctx, in, info, handler)
}

var _FoobarHandler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "foobar_grpc.FoobarHandler",
	HandlerType: (*FoobarHandlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFoobar",
			Handler:    _FoobarHandler_GetFoobar_Handler,
		},
		{
			MethodName: "GetListFoobar",
			Handler:    _FoobarHandler_GetListFoobar_Handler,
		},
		{
			MethodName: "UpdateFoobar",
			Handler:    _FoobarHandler_UpdateFoobar_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _FoobarHandler_Delete_Handler,
		},
		{
			MethodName: "Store",
			Handler:    _FoobarHandler_Store_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "foobar.proto",
}
